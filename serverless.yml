
service: Zintle
provider:
  name: aws
  runtime: nodejs18.x
  stage: development
  region: ap-south-1
  memorySize: 512
  build:
    esbuild: false
  environment:
    MONGO_URI: ${env:MONGO_URI}
    JWT_SECRET: ${env:JWT_SECRET}
    JWT_EXPIRES_IN: ${env:JWT_EXPIRES_IN}
    EMAIL_USER: ${env:EMAIL_USER}
    EMAIL_PASS: ${env:EMAIL_PASS}
    AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    
  timeout: 900
  logRetentionInDays: 90

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            - s3:ListBucket
            - s3:PutObjectAcl
            - s3:GetObjectAcl
            - s3:HeadObject
            # Add these permissions for presigned URLs
            - s3:PutObjectTagging
            - s3:GetObjectTagging
            - s3:PutBucketCORS
            - s3:GetBucketCORS
          Resource: 
            - arn:aws:s3:::${env:AWS_BUCKET_NAME}
            - arn:aws:s3:::${env:AWS_BUCKET_NAME}/*
        # Add CORS configuration permissions
        - Effect: Allow
          Action:
            - s3:GetBucketCors
            - s3:PutBucketCors
          Resource: 
            - arn:aws:s3:::${env:AWS_BUCKET_NAME}

functions:
  app:
    handler: handler.handler
    events:
      - http:
          path: /{proxy+}
          method: any
          cors:
            origin: "https://deployment.d3iar3akvow17y.amplifyapp.com"
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With
              - X-Amz-Date
              - X-Amz-Security-Token
              - X-Api-Key
            allowCredentials: true 
            maxAge: 3600

package:
  individually: true

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  cors:
    allowCredentials: true
    headers:
      - Content-Type
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security-Token
      - X-Requested-With