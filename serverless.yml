# service: Zintle
# provider:
#   name: aws
#   runtime: nodejs18.x
#   stage: development
#   region: ap-south-1
#   memorySize: 512
#   build:
#     esbuild: false # Changed from "false" (string) to false (boolean)
#   environment:
#     MONGO_URI: ${env:MONGO_URI}
#     JWT_SECRET: ${env:JWT_SECRET}
#     JWT_EXPIRES_IN: ${env:JWT_EXPIRES_IN}
#     EMAIL_USER: ${env:EMAIL_USER}
#     EMAIL_PASS: ${env:EMAIL_PASS}
#     AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    
#   timeout: 900
#   logRetentionInDays: 90


# functions:
#   app:
#     handler: handler.handler
#     events:
#       - http:
#           path: /{proxy+}
#           method: any
#           cors:
#             origin: "https://deployment.d3iar3akvow17y.amplifyapp.com"
#             headers:
#               - Content-Type
#               - Authorization
#               - X-Requested-With
#             allowCredentials: true 
      


# package:
#   individually: true

# plugins:
#   - serverless-dotenv-plugin
#   - serverless-offline

service: Zintle
provider:
  name: aws
  runtime: nodejs18.x
  stage: development
  region: ap-south-1
  memorySize: 512
  build:
    esbuild: false
  environment:
    MONGO_URI: ${env:MONGO_URI}
    JWT_SECRET: ${env:JWT_SECRET}
    JWT_EXPIRES_IN: ${env:JWT_EXPIRES_IN}
    EMAIL_USER: ${env:EMAIL_USER}
    EMAIL_PASS: ${env:EMAIL_PASS}
    AWS_BUCKET_NAME: ${env:AWS_BUCKET_NAME}
    
  timeout: 900
  logRetentionInDays: 90

  # Add IAM role statements for S3 access
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource: 
            - arn:aws:s3:::${env:AWS_BUCKET_NAME}
            - arn:aws:s3:::${env:AWS_BUCKET_NAME}/*

functions:
  app:
    handler: handler.handler
    events:
      - http:
          path: /{proxy+}
          method: any
          cors:
            origin: "https://deployment.d3iar3akvow17y.amplifyapp.com"
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With
            allowCredentials: true 

package:
  individually: true

plugins:
  - serverless-dotenv-plugin
  - serverless-offline